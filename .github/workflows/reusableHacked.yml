name: Deploy Via CLASP

on:
  workflow_call:
    inputs:
      sha:
        required: false
        type: string
      event_name:
        required: false
        type: string
      actor:
        required: false
        type: string
      job:
        required: false
        type: string
      repository:
        required: false
        type: string 
      ref_name:
        required: false
        type: string
          
    secrets:
      # CLASPRC_JSON_SECRET: ${{ secrets.IN_CLASPRC_JSON }}
      IN_CLASPRC_JSON:
        required: true
        # type: string
      # token: ${{ secrets.IN_REPO_ACCESS_TOKEN }}
      IN_REPO_ACCESS_TOKEN:
        required: true
      # DEPLOYMENT_ID: ${{ secrets.IN_DEPLOYMENT_ID }}
      IN_DEPLOYMENT_ID:
        required: false
        # type: string
      # SCRIPT_ID: ${{secrets.IN_SCRIPT_ID}}
      IN_SCRIPT_ID:
        required: false # but ***STRONGLY*** RECOMMENDED!
        # type: string
      # PARENT_ID: ${{secrets.IN_PARENT_ID}}
      IN_PARENT_ID:
        required: false
        # type: string
      # CONFIG_DATA: ${{ secrets.IN_CONFIG_JSON }}
      IN_CONFIG_DATA:
        required: false
        # type: string



jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest

    steps:
      - name: Install clasp
        id: install-clasp
        run: sudo npm install @google/clasp@2.4.1 -g

      - name: Write CLASPRC_JSON secret to .clasprc.json file
        id: write-clasprc
        run: echo "$CLASPRC_JSON_SECRET" >> ~/.clasprc.json
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.IN_CLASPRC_JSON }}

      - name: Check clasp login status
        id: clasp_login
        run: clasp login --status

      - name: Save current .clasprc.json contents to CLASPRC_JSON_FILE environment variable
        id: save-clasprc
        run: |
          echo ::add-mask::$(tr -d '\n\r' < ~/.clasprc.json)
          echo "CLASPRC_JSON_FILE=$(tr -d '\n\r' < ~/.clasprc.json)" >> $GITHUB_ENV        


      - name: TESTING set / modify org secret
        id: modify-different-secret
        # if: ${{ env.CLASPRC_JSON_FILE != env.CLASPRC_JSON_SECRET  }}
        # LOL
        # Test15: add admin to PAT
        # Test16: create proper org token
        uses: texas-mcallen-mission/actions-secret-modifier@v1.0.14
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CHICKEN_NUGGET }}
        with:
          name: "CHICKEN_NUGGET"
          value: "TEST9"
          repository: 'texas-mcallen-mission'
          token: ${{ secrets.IN_REPO_ACCESS_TOKEN }}
          org: true
          visibility: 'all'
          org-name: 'texas-mcallen-mission'
# RUN IT

      - name: Save CLASPRC_JSON_FILE environment variable to CLASPRC_JSON repo secret
        id: set-clasprc-secret
        # if: ${{ env.CLASPRC_JSON_FILE != env.CLASPRC_JSON_SECRET  }}
        uses: texas-mcallen-mission/actions-secret-modifier@v1.0.14
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.IN_CLASPRC }}
        with:
          name: "TESTING_CLASPRC_JSON"
          value: ${{ env.CLASPRC_JSON_FILE }}
          repository: ${{ github.repository }}
          token: ${{ secrets.IN_REPO_ACCESS_TOKEN }}



      - name: Checkout repo
        id: checkout-repo
        if: ${{github.event_name	!= 'schedule' }}
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Pull Script Tooling
        id: pull-python-script
        if: ${{github.event_name	!= 'schedule' }}
        uses: actions/checkout@v3
        with:
          repository: texas-mcallen-mission/deploy-google-app-script-action-typescript
          path: deploy-data
          ref: 'main'

      - name: Set up things to make it easier to transition over.
        id: repo-setup
        if: ${{ github.event_name	!= 'schedule'}}
        run: /bin/python3 deploy-data/scripts/pre-setup.py

      - name: Set scriptId in .clasp.json file
        id: set-script-id
        if: ${{ github.event_name	!= 'schedule' && env.SCRIPT_ID }}
        run: jq '.scriptId = "${{ env.SCRIPT_ID }}"' .clasp.json > /tmp/.clasp.json && mv /tmp/.clasp.json .clasp.json
        env:
          SCRIPT_ID: ${{ secrets.IN_SCRIPT_ID }}

      - name: Set parentId in .clasp.json file
        id: set-parent-id
        if: ${{ github.event_name	!= 'schedule' && env.PARENT_ID }}
        run: jq '.parentId = "[${{ env.PARENT_ID }}]"' .clasp.json > /tmp/.clasp.json && mv /tmp/.clasp.json .clasp.json
        env:
          PARENT_ID: ${{ secrets.IN_PARENT_ID }}

    # Somewhere in here: push in github commit number and information to a stubby information js file

      # read the guide at docs/ci-setup.md!
      - name: update git-info.js
        id: modify-git-info
        run: >
          sed -ibak -e "s/COMMITSHA/'$COMMIT_SHA'/g;
          s/REFNAME/'$GITHUB_REF_NAME'/g;
          s/COMMITACTOR/'$COMMIT_ACTOR'/g;
          s/EVENTNAME/'$EVENT_NAME'/g;
          s|GITHUBREPOSITORY|'$GITHUB_REPOSITORY'|g;
          s/JOBID/'$GITHUB_JOB'/g;" git-info.js
        env:
          COMMIT_SHA: ${{ inputs.sha }}
          EVENT_NAME: ${{ inputs.event_name }}
          COMMIT_ACTOR: ${{ inputs.actor }}
          GITHUB_JOB: ${{ inputs.job }}
          GITHUB_REF_NAME: ${{ inputs.ref_name }}
          GITHUB_REPOSITORY: ${{ inputs.repository }}
          # üêß

      - name: update git-info.js Part 2 but in Python
        id: modify-git-info-2-python
        if: ${{ github.event_name	!= 'schedule' && env.CONFIG_DATA }}
        run: /bin/python3 deploy-data/scripts/add-config.py "$CONFIG_DATA"
        env:
          CONFIG_DATA: ${{ secrets.IN_CONFIG_DATA }}
          # üêß

      - name: rename git-info and give it an A
        id: rename-git-info-in-python
        if: ${{github.event_name	!= 'schedule' }}
        run: /bin/python3 deploy-data/scripts/rename-git-info.py "testArg"

# updated in fixes-and-updates branch to catch errors.
      - name: Push script to scripts.google.com
        id: clasp-push
        if: ${{ github.event_name	!= 'schedule' }}
        run: /bin/python3 deploy-data/scripts/run-clasp-fancy.py

      - name: Deploy Script
        id: clasp-deploy
        if: ${{env.DEPLOYMENT_ID && (github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main'))}}
        run: clasp deploy -i "$DEPLOYMENT_ID" -d "$GITHUB_REF"
        env:
          DEPLOYMENT_ID: ${{ secrets.IN_DEPLOYMENT_ID }}